@page "/forms/advanced"
@using Blazor.AdminLte.Alerts.Toaster.Configuration
@using Blazor.AdminLte.Alerts.Toaster.Services
@inject NavigationManager NavigationManager
@inject IToastService toastService

<ContentHeader>
    <Header>
        <Blazor.AdminLte.PageTitle Title="Advanced Forms" />
    </Header>
</ContentHeader>
<ContentMain>
    <Card>
        <Title><CardTitle>Date Range Picker (MVP)</CardTitle></Title>
        <Body>
            @code {
                private Range<DateTime> ValNl { get; set; } = new Range<DateTime>(DateTime.Now, DateTime.Now.AddMonths(1));
                private Range<DateTime> ValUs { get; set; } = new Range<DateTime>(DateTime.Now, DateTime.Now.AddMonths(1));
                private int changedCallbackCounterNl;
                private int changedCallbackCounterUs;
                public void RangeChangedNl(Range<DateTime> range)
                {
                    changedCallbackCounterNl++;
                }
                public void RangeChangedUs(Range<DateTime> range)
                {
                    changedCallbackCounterUs++;
                }

            }
            <FormGroup>
                <label>Date range (Dutch): DateTime Object: @ValNl.From.Year @ValNl.From.Month @ValNl.From.Day - @ValNl.To.Year @ValNl.To.Month @ValNl.To.Day</label>
                Callbacks: @changedCallbackCounterNl
                <div class="input-group">
                    <DateRangePicker OnRangeChanged="RangeChangedNl" @bind-Range="ValNl" ApplyLabel="Wijzig" CancelLabel="Annuleer"
                                     CultureInfo='new System.Globalization.CultureInfo("nl-NL")'></DateRangePicker>
                </div>
            </FormGroup>
            <FormGroup>
                <label>Date range (English): DateTime Object: @ValUs.From.Year @ValUs.From.Month @ValUs.From.Day - @ValUs.To.Year @ValUs.To.Month @ValUs.To.Day</label>
                Callbacks: @changedCallbackCounterUs
                <div class="input-group">
                    <DateRangePicker OnRangeChanged="RangeChangedUs" @bind-Range="ValUs"
                                     CultureInfo='new System.Globalization.CultureInfo("en-US")'></DateRangePicker>
                </div>
            </FormGroup>
        </Body>
    </Card>
    <Card>
         <Title><CardTitle>Date Range Picker (MVP)</CardTitle></Title>
        <Body>
        <button class="btn btn-info" @onclick="@(() => toastService.ShowInfo("I'm an INFO message"))">Info Toast</button>
        <button class="btn btn-success" @onclick="@(() => toastService.ShowSuccess("I'm a SUCCESS message with a custom heading", "Congratulations!"))">Success Toast</button>
        <button class="btn btn-warning" @onclick="@(() => toastService.ShowWarning("I'm a WARNING message"))">Warning Toast</button>
        <button class="btn btn-danger" @onclick="@(() => toastService.ShowError("I'm an ERROR message"))">Error Toast</button>
        <button class="btn btn-info" @onclick="@OnShowHtml">Info Toast with HTML</button>
@*        <button class="btn btn-info" @onclick="@(() => toastService.ShowInfo("Click to refresh the page", "Click me!", () => { NavigationManager.NavigateTo("/", true); }))">
            Info Toast with custom action on click
        </button>
*@        <hr />

        <h1>Blazored Toasts - Custom Component</h1>

        <button class="btn btn-primary" @onclick="@(() => toastService.ShowToast<MyToastComponent>(new ToastInstanceSettings(5, true)))">Custom Toast</button>
        <button class="btn btn-secondary" @onclick="@(() => toastService.ShowToast<MyToastComponent>(_toastParameters, new ToastInstanceSettings(5, true)))">Custom Toast with parameters</button>
        <hr />

        <h1>Blazored Toasts - Remove Toasts</h1>

        <button class="btn btn-primary" @onclick="ClearAll">Clear All Toasts</button>
        <button class="btn btn-warning" @onclick="ClearWarnings">Clear Warning Toasts</button>
        <button class="btn btn-info" @onclick="ClearInfos">Clear Info Toasts</button>
        <button class="btn btn-secondary" @onclick="ClearCustom">Clear Custom Toasts</button>

        @code
        {
        private ToastParameters _toastParameters;

        protected override void OnInitialized()
        {
            _toastParameters = new ToastParameters();
            _toastParameters.Add(nameof(MyToastComponent.Title), "I'm a custom toast component with parameters");
            _toastParameters.Add(nameof(MyToastComponent.ToastParam), "I'm a parameter");
        }

        private void OnShowHtml()
        {
            RenderFragment message =@<text>I'm an <em>INFO</em> message with some <strong>bold</strong> text</text>
        ;
            toastService.ShowToast(ToastLevel.Info, message);
        }

        private void ClearAll()
        => toastService.ClearAll();

        private void ClearWarnings()
        => toastService.ClearToasts(ToastLevel.Warning);

        private void ClearInfos()
        => toastService.ClearInfoToasts();

        private void ClearCustom()
        => toastService.ClearCustomToasts();
        }
    </Body>
    </Card>
</ContentMain>


